#
# Configuration reference: https://circleci.com/docs/2.0/configuration-reference/
# Java config: https://circleci.com/docs/2.0/language-java/
# GCP howto: https://localghost.dev/2019/12/deploying-your-google-appengine-app-with-circleci/
# Remote docker: https://circleci.com/docs/2.0/building-docker-images/
#
version: 2.1

workflows:
  build-and-deploy:
    jobs:
      - build:
          context:
            - "GitHub Release Credentials"
            - "Docker"

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - setup_remote_docker:
          version: 19.03.13

      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1.1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1.1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1.1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: build
          command: |
            ./gradlew clean build
      - run:
          name: build docker image
          command: |
            ./gradlew bootBuildImage
      - run:
          name: docker login
          command: |
            echo $DOCKER_PASSWORD | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: push docker image
          command: |
            docker push joelin/nextpos-message-service:latest

#  docker:
#    machine: true
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          name: build docker image
#          command: |
#            ./gradlew bootBuildImage -PciBuild
#      - run:
#          name: docker login
#          command: |
#            echo $DOCKER_PASSWORD | docker login -u "$DOCKER_USERNAME" --password-stdin
#      - run:
#          name: push docker image
#          command: |
#            docker push joelin/einvoice-service:latest
